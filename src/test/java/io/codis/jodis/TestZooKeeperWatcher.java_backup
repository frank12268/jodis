package io.codis.jodis;

import com.google.common.io.Closeables;
import org.apache.zookeeper.CreateMode;
import org.apache.zookeeper.ZooKeeper;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

import static org.junit.Assert.assertEquals;

/**
 * Created by zihong.lv on 4/23/17.
 */
public class TestZooKeeperWatcher {
    private static final int DEFAULT_SESSION_TIMEOUT_MS = Integer.getInteger("curator-default-session-timeout", '\uea60').intValue();
    private static final int DEFAULT_CONNECTION_TIMEOUT_MS = Integer.getInteger("curator-default-connection-timeout", 15000).intValue();

    private ZooKeeperServer zkServer;
    private int zkPort;
    private ZooKeeper zkClient;
    private String zkProxyDir = "/" + getClass().getName();
    private File testDir = new File(getClass().getName());
    private int redisPort1 = 6001;
    private int redisPort2 = 6002;
    private RoundRobinJedisPool jodisPool;
    private int DEFAULT_TIMEOUT = 5000;

    @Before
    public void setUp() throws Exception {
        System.out.println(String.format("DEFAULT_SESSION_TIMEOUT_MS = %d", DEFAULT_SESSION_TIMEOUT_MS));
        System.out.println(String.format("DEFAULT_CONNECTION_TIMEOUT_MS = %d", DEFAULT_CONNECTION_TIMEOUT_MS));
        ZooKeeperServer.deleteDirectory(testDir);
        testDir.mkdirs();
        //zkServer = new ZooKeeperServer(-1, testDir);
        zkServer = new ZooKeeperServer(2181, testDir);
        zkPort = zkServer.getZkPort();
        System.out.println(String.format("ZooKeeper port = %d", zkPort));

        zkClient = new ZooKeeper("127.0.0.1:" + zkPort, 5000, null);
        zkServer.addNode(zkClient, zkProxyDir, "node1", redisPort1, "online", CreateMode.PERSISTENT);
        jodisPool = RoundRobinJedisPool.create().curatorClient("127.0.0.1:" + zkPort, 5000, 5000)
                .timeoutMs(5000).zkProxyDir(zkProxyDir).build();
        System.out.println(String.format("zkProxyDir = %s", zkProxyDir));
    }

    @After
    public void tearDown() throws Exception {
        Closeables.close(jodisPool, true);
        if (zkClient != null) {
            zkClient.close();
        }
        if (zkServer != null) {
            zkServer.getZkServer().stop();
        }
        ZooKeeperServer.deleteDirectory(testDir);
    }

    @Test
    public void test() throws Exception{
        System.out.println(String.format("#[1][0]pool_size = %d", jodisPool.getPoolSize()));
        assertEquals(1, jodisPool.getPoolSize());
        /*
        zkServer.addNode(zkClient, zkProxyDir, "node2", redisPort2, "online", CreateMode.EPHEMERAL);
        Thread.sleep(5000);
        System.out.println(String.format("#[2][0]pool_size = %d", jodisPool.getPoolSize()));
        assertEquals(2, jodisPool.getPoolSize());
        zkServer.getZkServer().stop();
        zkClient.close();
        Thread.sleep(30000);
        System.out.println(String.format("#[2][1]pool_size = %d", jodisPool.getPoolSize()));
        assertEquals(2, jodisPool.getPoolSize());

        zkServer = new ZooKeeperServer(2181, testDir);
        Thread.sleep(30000);
        zkClient = new ZooKeeper("127.0.0.1:" + zkPort, 5000, null);
        System.out.println(String.format("#[1][1]pool_size = %d", jodisPool.getPoolSize()));
        System.out.println(String.format("#[1][0]children = %d", zkClient.exists(zkProxyDir, false).getNumChildren()));
        assertEquals(1, zkClient.exists(zkProxyDir, false).getNumChildren());
        assertEquals(1, jodisPool.getPoolSize());

        zkServer.removeNode(zkClient, zkProxyDir, "node1");
        Thread.sleep(5000);
        System.out.println(String.format("#[0][0]pool_size = %d", jodisPool.getPoolSize()));
        assertEquals(0, jodisPool.getPoolSize());
        */
    }

}